id: trigger_nifi_flow
namespace: sandbox-datalake
description: Starts and stops a Nifi processor

inputs:
  - id: nifi_url
    type: STRING
    defaults: https://3e4b-176-142-225-52.ngrok-free.app

  - id: nifi_username
    type: STRING
    defaults: c2e2c4cb-8281-4249-9de3-c641ac664632

  - id: processor_id
    type: STRING
    defaults: a58dfb9f-0196-1000-23a8-4cd35b664908

tasks:
  - id: get_token
    type: io.kestra.plugin.core.http.Request
    uri: "{{ inputs.nifi_url }}/nifi-api/access/token"
    method: POST
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    body: "username={{ inputs.nifi_username }}&password={{ secret('NIFI_PASSWORD') }}&grant_type=password"

  - id: get_processor_info
    type: io.kestra.plugin.core.http.Request
    uri: "{{ inputs.nifi_url }}/nifi-api/processors/{{ inputs.processor_id }}"
    method: GET
    headers:
      Authorization: "Bearer {{ outputs.get_token.body }}"

  - id: log
    type: io.kestra.plugin.core.log.Log
    message: "{{ outputs.get_processor_info.body | jq('.revision.version') | first }}"

  - id: start_processor
    type: io.kestra.plugin.core.http.Request
    uri: "{{ inputs.nifi_url }}/nifi-api/processors/{{ inputs.processor_id }}/run-status"
    method: PUT
    headers:
      Authorization: "Bearer {{ outputs.get_token.body }}"
      Content-Type: "application/json"
    body: |
      {
        "revision": {
          "version": {{ outputs.get_processor_info.body | jq('.revision.version') | first }}
        },
        "state": "RUNNING"
      }

  # This new call is there to handle the version being updated while starting processor
  - id: get_processor_info_updated
    type: io.kestra.plugin.core.http.Request
    uri: "{{ inputs.nifi_url }}/nifi-api/processors/{{ inputs.processor_id }}"
    method: GET
    headers:
      Authorization: "Bearer {{ outputs.get_token.body }}"

  - id: stop_processor
    type: io.kestra.plugin.core.http.Request
    uri: "{{ inputs.nifi_url }}/nifi-api/processors/{{ inputs.processor_id }}/run-status"
    method: PUT
    headers:
      Authorization: "Bearer {{ outputs.get_token.body }}"
      Content-Type: "application/json"
    body: |
      {
        "revision": {
          "version": {{ outputs.get_processor_info_updated.body | jq('.revision.version') | first }}
        },
        "state": "STOPPED"
      }